# d1
inp w
mul z 0
add z w
add z 8   # z := d1+8

# z = d1 + 8

# d2
inp w
mul z 26
# z = (i1 + 8) * 26
add z w
add z 8
# y = (i2 + 8)

# z = (d1 + 8) * 26 + d2 * 8

# d3
inp w
mul x 0
add x z
mod x 26
# x = z % 26
add x 10
eql x w
eql x 0
# x = 1
mul y 0
add y 25
mul y x
add y 1
# y = 26
mul z y
# z = ((d1 + 8) * 26 + d2 * 8) * 26 
mul y 0
add y w
add y 12
# y = (d3 + 12)
mul y x
add z y
# z = ((d1 + 8) * 26 + d2 * 8) * 26 + d3 + 12


# d4
inp w
mul x 0
add x z
#  x = z % 26
mod x 26
div z 26
#  z = z / 26
add x -8
#  x = (z % 26) - 8

#  x = d3 + 4
eql x w
# X = d3 + 4 == d4:
eql x 0
# X = d3 + 4 != d4:
mul y 0
add y 25
mul y x
add y 1

# if d3 + 4 != d4:
#   y = 26
# else
#   y = 1

mul z y
# z = z * y
mul y 0
add y w
add y 10
mul y x
add z y
# if d3 + 4 != d4:
#   z = z * y + d4 + 10
# else
#   z = z * y
#

# d5
inp w
mul x 0
#add x z
#mod x 26
## x = z % 26
#add x 15
## x = z % 26 + 15
#eql x w
#eql x 0
# x = 1
add x 1
mul y 0
add y 25
mul y x
add y 1
mul z y
# z *= 26
mul y 0
add y w
add y 2
mul y x
add z y
# z = z * 26 + w + 2

# d6
inp w
mul x 0
add x z
mod x 26
add x 15
eql x w
eql x 0
# x = 1
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 8
mul y x
add z y
# z = z * 26 + w + 8

# d7
inp w
mul x 0
add x z
mod x 26
div z 26
# z = z // 26  => z(-2)
add x -11
# x = d5 - 3
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 4
mul y x
add z y

# z = z * 26 + w + 4

# d8
inp w
mul x 0
add x z
mod x 26
add x 10  # x := z % 26 + 10
eql x w   # x := 0
eql x 0   # x := 1
mul y 0
add y 25  # y : 25
mul y x
add y 1   # y := 26
mul z y   # z = z * 26
mul y 0
add y w
add y 9
mul y x
add z y   # z += d8 + 9
# z = z*26 + d8 + 9

# d9
inp w
mul x 0
add x z
mod x 26  # x = z % 26   is d8+9
div z 26  # z = z / 26
add x -3  # x is d8 + 6
eql x w
eql x 0   # x :=  d8+6 != d9
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 10
mul y x
add z y

# d10
inp w
mul x 0
add x z
mod x 26
add x 15
eql x w
eql x 0   # x := 1
mul y 0
add y 25
mul y x
add y 1   # y := 26
mul z y   
mul y 0
add y w
add y 3
mul y x
add z y  # z := z * 26 + d10 + 3

# d11
inp w
mul x 0
add x z
mod x 26  # x is d10 + 3
div z 26
add x -3  # x is d10
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 7
mul y x
add z y
#   if d11 == d10: z = z' else z = z*26+d11+7

# d12
inp w
mul x 0
add x z
mod x 26   # x is z % 26 is d11+7 
div z 26   # z := z10
add x -1   # x is d11+6
eql x w
eql x 0    # x is d11+6 != d12
mul y 0
add y 25
mul y x
add y 1
mul z y   # if COND z *= 26
mul y 0
add y w
add y 7
mul y x
add z y   # z = z'//26 or z'//26 * 26 + d12 + 7

# d13
inp w
mul x 0
add x z
mod x 26
div z 26
add x -10   # d12 - 3
eql x w   # X is d12 - 3 == d13
eql x 0   # X is d12 - 3 != d13
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 2
mul y x
add z y


# d14
inp w
mul x 0
add x z
mod x 26
div z 26
add x -16
# x = z % 26 - 16
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 2
mul y x
add z y
